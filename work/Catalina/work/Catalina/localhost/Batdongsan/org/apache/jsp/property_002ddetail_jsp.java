/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.12
 * Generated at: 2024-12-12 15:14:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import Dao.PropertyDAO;
import Entity.Property1;
import java.util.List;
import Dao.PosterDAO;
import Entity.Poster;
import Entity.Comment;
import java.util.ArrayList;
import Dao.CommentDAO;

public final class property_002ddetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("Dao.PropertyDAO");
    _jspx_imports_classes.add("Entity.Comment");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Entity.Poster");
    _jspx_imports_classes.add("Dao.PosterDAO");
    _jspx_imports_classes.add("Dao.CommentDAO");
    _jspx_imports_classes.add("Entity.Property1");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/property-detail.css\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Property Details</title>\r\n");
      out.write("<head>\r\n");
      out.write("    <style>\r\n");
      out.write("\r\n");
      out.write("        ul {\r\n");
      out.write("            list-style-type: none;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            margin-right: 0;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .u-lo li {\r\n");
      out.write("            position: relative;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            margin-right: 20px;\r\n");
      out.write("            z-index: 10; /* Đảm bảo menu cha hiển thị trên cùng */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul li a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Thiết lập cho menu con */\r\n");
      out.write("        ul li ul {\r\n");
      out.write("            display: none; /* Ẩn menu con mặc định */\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 100%;\r\n");
      out.write("            left: 0;\r\n");
      out.write("            background-color: #f9f9f9;\r\n");
      out.write("            min-width: 200px;\r\n");
      out.write("            padding: 10px 0;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            z-index: 999; /* Đảm bảo menu con hiển thị trên các phần tử khác */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul li ul li {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul li ul li a {\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Hiển thị menu con khi hover */\r\n");
      out.write("        ul li:hover ul {\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Style cho menu con khi hover */\r\n");
      out.write("        ul li ul li a:hover {\r\n");
      out.write("            background-color: #eee;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("        .heart-icon {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            bottom: 5px; /* Di chuyển trái tim xuống góc dưới */\r\n");
      out.write("            right: 5px; /* Đặt trái tim ở góc phải */\r\n");
      out.write("            z-index: 10; /* Đảm bảo trái tim nằm trên tất cả các phần tử khác */\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            margin-bottom: 2px;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .heart-icon img {\r\n");
      out.write("            width: 20px !important; /* Kích thước nhỏ hơn của trái tim */\r\n");
      out.write("            height: 20px !important; /* Kích thước nhỏ hơn của trái tim */\r\n");
      out.write("            transition: transform 0.3s ease, filter 0.3s ease; /* Hiệu ứng chuyển động */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .heart-icon:hover img {\r\n");
      out.write("            transform: scale(1.2); /* Phóng to biểu tượng trái tim khi hover */\r\n");
      out.write("            filter: brightness(1.5); /* Tăng độ sáng khi hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .floating-cart {\r\n");
      out.write("            position: fixed; /* Đảm bảo vị trí cố định trên trang */\r\n");
      out.write("            bottom: 20px; /* Khoảng cách với mép dưới trang */\r\n");
      out.write("            right: 20px; /* Khoảng cách với mép phải của trang */\r\n");
      out.write("            width: 40px !important; /* Giảm chiều rộng của biểu tượng giỏ hàng */\r\n");
      out.write("            height: 40px !important; /* Giảm chiều cao của biểu tượng giỏ hàng */\r\n");
      out.write("            background-color: transparent; /* Màu nền của biểu tượng */\r\n");
      out.write("            border-radius: 50%; /* Biểu tượng có hình tròn */\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ để nổi bật */\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            z-index: 1000; /* Đảm bảo nằm trên các thành phần khác */\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s ease; /* Hiệu ứng chuyển màu khi hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Khi hover vào floating-cart */\r\n");
      out.write("        .floating-cart:hover {\r\n");
      out.write("            background-color: transparent;\r\n");
      out.write("            transform: scale(1.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Style cho biểu tượng giỏ hàng (cart-icon) */\r\n");
      out.write("        .floating-cart .cart-icon {\r\n");
      out.write("            width: 40px; /* Giảm kích thước icon */\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            object-fit: contain; /* Đảm bảo ảnh vừa khung mà không bị méo */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Hiển thị mini-cart khi hover vào floating-cart */\r\n");
      out.write("        .floating-cart:hover .mini-cart {\r\n");
      out.write("            display: block; /* Hiển thị mini-cart khi hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Style cho mini-cart */\r\n");
      out.write("        .mini-cart {\r\n");
      out.write("            display: none; /* Mặc định ẩn mini-cart */\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            bottom: 80px; /* Đặt mini-cart ngay trên biểu tượng giỏ hàng */\r\n");
      out.write("            right: 0;\r\n");
      out.write("            width: 250px; /* Giảm chiều rộng của mini-cart */\r\n");
      out.write("            max-height: 400px; /* Giới hạn chiều cao để tránh quá dài */\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Đổ bóng nhẹ */\r\n");
      out.write("            overflow-y: auto; /* Cho phép cuộn khi nội dung quá dài */\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Style cho danh sách sản phẩm trong mini-cart */\r\n");
      out.write("        .mini-cart ul {\r\n");
      out.write("            list-style-type: none;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .mini-cart li {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .mini-cart li img {\r\n");
      out.write("            width: 40px; /* Kích thước hình ảnh nhỏ hơn */\r\n");
      out.write("            height: 40px;\r\n");
      out.write("            object-fit: cover;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .mini-cart .item-info {\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .mini-cart .item-info h4 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            white-space: nowrap;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            text-overflow: ellipsis; /* Thêm dấu \"...\" khi tên sách quá dài */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .item-count {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 5px; /* Vị trí từ đầu biểu tượng giỏ hàng */\r\n");
      out.write("            right: 5px; /* Vị trí từ bên phải biểu tượng giỏ hàng */\r\n");
      out.write("            background-color: red; /* Màu nền */\r\n");
      out.write("            color: white; /* Màu chữ */\r\n");
      out.write("            border-radius: 50%; /* Hình tròn */\r\n");
      out.write("            width: 20px; /* Chiều rộng */\r\n");
      out.write("            height: 20px; /* Chiều cao */\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center; /* Canh giữa */\r\n");
      out.write("            align-items: center; /* Canh giữa */\r\n");
      out.write("            font-size: 12px; /* Kích thước chữ */\r\n");
      out.write("            font-weight: bold; /* Đậm chữ */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .bottom-banner {\r\n");
      out.write("            width: 56%; /* Kích thước của banner */\r\n");
      out.write("            margin-left: 135px; /* Canh giữa và tạo khoảng cách */\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .bottom-banner img {\r\n");
      out.write("            width: 63%; /* Chiều rộng đầy đủ */\r\n");
      out.write("            border-radius: 5px; /* Bo góc cho banner */\r\n");
      out.write("            padding-right: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .property-features {\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("            width: 52%; /* Kích thước của banner */\r\n");
      out.write("            margin-left: 135px; /* Canh giữa và tạo khoảng cách */\r\n");
      out.write("\r\n");
      out.write("            padding: 15px; /* Padding cho phần đặc điểm */\r\n");
      out.write("            border: 1px solid #ccc; /* Viền cho phần đặc điểm */\r\n");
      out.write("            border-radius: 5px; /* Bo góc cho phần đặc điểm */\r\n");
      out.write("            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Đổ bóng cho phần đặc điểm */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .features-container {\r\n");
      out.write("            display: flex; /* Sử dụng Flexbox để chia cột */\r\n");
      out.write("            justify-content: space-between; /* Tạo khoảng cách đều giữa các cột */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .features-column {\r\n");
      out.write("            width: 48%; /* Chiều rộng của mỗi cột */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .feature-item {\r\n");
      out.write("            display: flex; /* Sử dụng Flexbox cho mỗi mục */\r\n");
      out.write("            align-items: center; /* Căn giữa theo chiều dọc */\r\n");
      out.write("            margin-bottom: 10px; /* Khoảng cách giữa các mục */\r\n");
      out.write("            padding: 5px 0; /* Thêm padding trên và dưới để căn chỉnh */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .feature-icon {\r\n");
      out.write("            font-size: 24px; /* Kích thước biểu tượng */\r\n");
      out.write("            margin-right: 20px; /* Khoảng cách giữa biểu tượng và nội dung */\r\n");
      out.write("\r\n");
      out.write("            flex-shrink: 0; /* Đảm bảo biểu tượng không bị co lại */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Đảm bảo nội dung trong các mục được căn chỉnh đều */\r\n");
      out.write("        .feature-item span {\r\n");
      out.write("            display: flex; /* Sử dụng Flexbox cho span */\r\n");
      out.write("            justify-content: space-between; /* Căn đều giữa label và giá trị */\r\n");
      out.write("            width: 100%; /* Đảm bảo chiều rộng đầy đủ */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .property-features h3 {\r\n");
      out.write("            margin-bottom: 10px; /* Khoảng cách dưới tiêu đề */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .property-features ul {\r\n");
      out.write("            list-style-type: none; /* Xóa dấu chấm đầu dòng */\r\n");
      out.write("            padding: 0; /* Xóa padding mặc định */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .property-features li {\r\n");
      out.write("            margin-bottom: 8px; /* Khoảng cách giữa các mục trong danh sách */\r\n");
      out.write("            display: flex; /* Hiển thị các mục dưới dạng dòng */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .property-features strong {\r\n");
      out.write("            margin-right: 10px; /* Khoảng cách giữa tiêu đề và giá trị */\r\n");
      out.write("            color: #333; /* Màu sắc cho tiêu đề */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .feature-icon {\r\n");
      out.write("            font-size: 24px; /* Điều chỉnh kích thước biểu tượng */\r\n");
      out.write("            margin-right: 10px; /* Khoảng cách giữa biểu tượng và nội dung */\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .map-container {\r\n");
      out.write("            width: 52%;\r\n");
      out.write("            margin-left: 135px;\r\n");
      out.write("            border: 1px solid #ccc; /* Đường viền cho phần bản đồ */\r\n");
      out.write("            border-radius: 5px; /* Bo góc cho phần bản đồ */\r\n");
      out.write("            overflow: hidden; /* Ẩn đi các phần viền ra ngoài */\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .map-container h3 {\r\n");
      out.write("            padding: 10px; /* Khoảng cách cho tiêu đề bản đồ */\r\n");
      out.write("            background-color: #f8f8f8; /* Nền cho tiêu đề */\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            margin: 0; /* Không có khoảng cách bên ngoài */\r\n");
      out.write("            border-bottom: 1px solid #ccc; /* Đường viền dưới cho tiêu đề */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .additional-info {\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("            width: 52%;\r\n");
      out.write("            border: 1px solid #ccc; /* Đường viền cho phần thông tin bổ sung */\r\n");
      out.write("            border-radius: 5px; /* Bo góc cho phần thông tin bổ sung */\r\n");
      out.write("            margin-left: 135px; /* Khoảng cách trên và dưới */\r\n");
      out.write("            padding: 15px; /* Khoảng cách bên trong */\r\n");
      out.write("            background-color: #f9f9f9; /* Màu nền cho phần thông tin bổ sung */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .additional-info h3 {\r\n");
      out.write("            margin: 0 0 10px 0; /* Khoảng cách dưới tiêu đề */\r\n");
      out.write("            font-size: 1.2em; /* Kích thước chữ tiêu đề */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .info-container {\r\n");
      out.write("            display: flex; /* Sử dụng flexbox để xếp hàng dọc */\r\n");
      out.write("            flex-direction: row; /* Xếp hàng theo chiều dọc */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .info-item {\r\n");
      out.write("            display: flex; /* Sử dụng flexbox để căn chỉnh icon và text */\r\n");
      out.write("            align-items: center; /* Căn giữa theo chiều dọc */\r\n");
      out.write("            margin-bottom: 10px; /* Khoảng cách giữa các mục thông tin */\r\n");
      out.write("            font-size: 0.9em; /* Kích thước chữ nhỏ hơn */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .info-icon {\r\n");
      out.write("            margin-right: 10px; /* Khoảng cách giữa icon và text */\r\n");
      out.write("            color: #007bff; /* Màu sắc cho các icon */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .copyright {\r\n");
      out.write("            width: 52%;\r\n");
      out.write("            margin-left: 135px;\r\n");
      out.write("            margin-top: 40px; /* Khoảng cách trên cho phần bản quyền */\r\n");
      out.write("            padding: 10px; /* Padding bên trong */\r\n");
      out.write("            text-align: center; /* Căn giữa nội dung */\r\n");
      out.write("            font-size: 0.8em; /* Kích thước chữ nhỏ hơn */\r\n");
      out.write("            color: #555; /* Màu chữ */\r\n");
      out.write("            border-top: 1px solid #ccc; /* Đường viền trên */\r\n");
      out.write("            background-color: #f9f9f9; /* Màu nền nhẹ cho phần bản quyền */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<header class=\"header\">\r\n");
      out.write("    <div class=\"header-top\" style=\"width: 100%; position: sticky; top: 0; z-index: 1000;\">\r\n");
      out.write("        <div class=\"header-left\">\r\n");
      out.write("            <div class=\"contact-item\">\r\n");
      out.write("                <img src=\"jpg/phone-call.png\" class=\"icon\">\r\n");
      out.write("                <span>0123 456 789</span>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"contact-item\">\r\n");
      out.write("                <img src=\"jpg/email.png\" class=\"icon\">\r\n");
      out.write("                <span>info@company.com</span>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"contact-item\">\r\n");
      out.write("                <img src=\"jpg/location.png\" class=\"icon\">\r\n");
      out.write("                <span>123 Đường ABC, Quận XYZ, TP.HCM</span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");

            boolean isLoggedIn = session.getAttribute("username") != null;
            String username = (String) session.getAttribute("username");
        
      out.write("\r\n");
      out.write("        <script>\r\n");
      out.write("            const isLoggedIn = ");
      out.print( isLoggedIn );
      out.write("; // Chuyển trạng thái đăng nhập thành biến JavaScript\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"header-right\" style=\"margin-top: 10px\">\r\n");
      out.write("            ");
 if (isLoggedIn) { 
      out.write("\r\n");
      out.write("            <a href=\"account.jsp\" class=\"btn\">\r\n");
      out.write("                <h3 style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 150px;\">\r\n");
      out.write("                    Hello, ");
      out.print( username );
      out.write("\r\n");
      out.write("                </h3>\r\n");
      out.write("            </a>\r\n");
      out.write("\r\n");
      out.write("            <a href=\"javascript:void(0)\" id=\"logoutButton\" class=\"btn\"\r\n");
      out.write("               onclick=\"document.getElementById('logoutForm').submit();\">\r\n");
      out.write("                <h3>Đăng xuất</h3>\r\n");
      out.write("            </a>\r\n");
      out.write("\r\n");
      out.write("            <!-- Hidden Form to Logout -->\r\n");
      out.write("            <form id=\"logoutForm\" action=\"logout\" method=\"POST\" style=\"display: none;\">\r\n");
      out.write("                <button type=\"submit\" style=\"display: none;\"></button> <!-- This button will not be visible -->\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("            <!-- Display login and registration options if not logged in -->\r\n");
      out.write("            <a href=\"login.jsp\" class=\"btn\">\r\n");
      out.write("                <h3>Đăng nhập</h3>\r\n");
      out.write("            </a>\r\n");
      out.write("            <a href=\"register.jsp\" class=\"btn\">\r\n");
      out.write("                <h3>Đăng ký</h3>\r\n");
      out.write("            </a>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <!-- \"Post Status\" button, visible to both logged-in and non-logged-in users -->\r\n");
      out.write("            <a href=\"create-poster.jsp\" class=\"btn\">\r\n");
      out.write("                <h3>Đăng tin</h3>\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <a href=\"javascript:void(0)\" id=\"floating-cart\" class=\"floating-cart\" onclick=\"toggleMiniCart()\"\r\n");
      out.write("       style=\"border: 1px solid #ccc; border-radius: 50%; position: fixed; bottom: 20px; right: 20px; z-index: 999; padding: 10px; background-color: white;\">\r\n");
      out.write("        <img src=\"jpg/heart%20(1).png\" style=\"width: 30px; height: 30px;\" alt=\"Giỏ hàng\" class=\"cart-icon\">\r\n");
      out.write("        <div class=\"item-count\" id=\"item-count\"\r\n");
      out.write("             style=\"position: absolute; top: 0; right: 0; background-color: red; color: white; border-radius: 50%; width: 20px; height: 20px; display: flex; align-items: center; justify-content: center; font-size: 12px;\">\r\n");
      out.write("            0\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"mini-cart\" id=\"mini-cart\"\r\n");
      out.write("             style=\"display: none; position: absolute; bottom: 50px; right: 0; width: 250px; background-color: #fff; border: 1px solid #ccc; border-radius: 8px; padding: 15px; box-shadow: 0 4px 8px rgba(0,0,0,0.2);\">\r\n");
      out.write("            <h4 style=\"margin-top: 0;\">Bất động sản đã lưu</h4>\r\n");
      out.write("            <ul id=\"cart-items\" style=\"list-style-type: none; padding: 0; margin: 10px 0;\">\r\n");
      out.write("                <!-- Mỗi sản phẩm có một form để xóa -->\r\n");
      out.write("                <li id=\"mini-cart-item-1\">\r\n");
      out.write("                    <div style=\"display: flex; align-items: center; margin-bottom: 10px;\">\r\n");
      out.write("\r\n");
      out.write("                        <form action=\"removeMiniCartItem\" method=\"POST\" style=\"display: inline;\">\r\n");
      out.write("                            <input type=\"hidden\" name=\"propertyId\" value=\"1\">\r\n");
      out.write("                            <button type=\"submit\" class=\"btn btn-sm btn-danger ml-3\"\r\n");
      out.write("                                    style=\"border: none; background-color: red; color: white; padding: 5px; border-radius: 4px; cursor: pointer;\">\r\n");
      out.write("                                <i class=\"fas fa-trash-alt\"></i> Xóa\r\n");
      out.write("                            </button>\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </li>\r\n");
      out.write("                <!-- Thêm các mục khác tương tự với ID và giá trị khác nhau -->\r\n");
      out.write("            </ul>\r\n");
      out.write("            <button id=\"go-to-cart\" onclick=\"goToCart()\"\r\n");
      out.write("                    style=\"width: 100%; padding: 10px; background-color: #007bff; color: #fff; border: none; border-radius: 4px; cursor: pointer;\">\r\n");
      out.write("                Đi tới xem bất động sản đã lưu\r\n");
      out.write("            </button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </a>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Tự động tải số lượng sản phẩm trong giỏ hàng khi trang được tải\r\n");
      out.write("        document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("            loadCartCount(); // Gọi hàm để tải số lượng mục trong giỏ hàng\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Toggle Mini Cart visibility\r\n");
      out.write("        function toggleMiniCart() {\r\n");
      out.write("            var miniCart = document.getElementById('mini-cart');\r\n");
      out.write("            if (miniCart.style.display === 'none' || miniCart.style.display === '') {\r\n");
      out.write("                miniCart.style.display = 'block';\r\n");
      out.write("                loadCartItems(); // Load cart items khi mở mini-cart\r\n");
      out.write("            } else {\r\n");
      out.write("                miniCart.style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Hàm tải số lượng sản phẩm trong giỏ hàng\r\n");
      out.write("        function loadCartCount() {\r\n");
      out.write("            fetch('http://localhost:8080/Batdongsan/getMiniCart', {\r\n");
      out.write("                method: 'GET',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json',\r\n");
      out.write("                    'X-Requested-With': 'XMLHttpRequest'\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("                .then(response => response.json())\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                    if (data.success) {\r\n");
      out.write("                        document.getElementById('item-count').innerText = data.itemCount;\r\n");
      out.write("                    } else {\r\n");
      out.write("                        document.getElementById('item-count').innerText = 0;\r\n");
      out.write("                    }\r\n");
      out.write("                })\r\n");
      out.write("                .catch(error => {\r\n");
      out.write("                    console.error('Error loading cart count:', error);\r\n");
      out.write("                    document.getElementById('item-count').innerText = 0;\r\n");
      out.write("                });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Redirect to Cart Page\r\n");
      out.write("        function goToCart() {\r\n");
      out.write("            window.location.href = 'cart.jsp';  // Thay đổi nếu cần\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Load Cart Items via AJAX\r\n");
      out.write("        function loadCartItems() {\r\n");
      out.write("            fetch('http://localhost:8080/Batdongsan/getMiniCart', {\r\n");
      out.write("                method: 'GET',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json',\r\n");
      out.write("                    'X-Requested-With': 'XMLHttpRequest'\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("                .then(response => response.json())\r\n");
      out.write("                .then(data => {\r\n");
      out.write("                    const cartItemsContainer = document.getElementById('cart-items');\r\n");
      out.write("                    cartItemsContainer.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write("                    if (data.success) {\r\n");
      out.write("                        document.getElementById('item-count').innerText = data.itemCount;\r\n");
      out.write("\r\n");
      out.write("                        if (data.cartItems.length > 0) {\r\n");
      out.write("                            data.cartItems.forEach(item => {\r\n");
      out.write("                                const li = document.createElement('li');\r\n");
      out.write("                                li.id = `cart-item-${item.propertyId}`;\r\n");
      out.write("\r\n");
      out.write("                                li.innerHTML = `\r\n");
      out.write("                            <div style=\"display: flex; align-items: center; margin-bottom: 10px;\">\r\n");
      out.write("                                <img src=\"${item.imageUrl}\" alt=\"${item.title}\" class=\"cart-item-image\" style=\"width: 50px; height: 50px; margin-right: 10px;\">\r\n");
      out.write("                                <div>\r\n");
      out.write("                                    <h5>${item.title}</h5>\r\n");
      out.write("                                    <p style=\"color:darkred\">Giá: ${item.price} tỷ</p>\r\n");
      out.write("                                    <p style=\"color:darkred\">Diện tích: ${item.area} m²</p>\r\n");
      out.write("                                    <p>Địa chỉ: ${item.address}</p>\r\n");
      out.write("                                    <p>Số lượng: ${item.quantity}</p>\r\n");
      out.write("                 <!-- Form xóa sản phẩm -->\r\n");
      out.write("<form action=\"removeMiniCartItem\" method=\"POST\" style=\"display: inline;\">\r\n");
      out.write("    <input type=\"hidden\" name=\"propertyId\" value=\"${item.propertyId}\">\r\n");
      out.write("    <button type=\"submit\" class=\"btn btn-sm btn-danger ml-3\" style=\"border: none; background-color: red; color: white; padding: 5px; border-radius: 4px; cursor: pointer;\">\r\n");
      out.write("        <i class=\"fas fa-trash-alt\"></i> Xóa\r\n");
      out.write("    </button>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        `;\r\n");
      out.write("                                cartItemsContainer.appendChild(li);\r\n");
      out.write("                            });\r\n");
      out.write("                        } else {\r\n");
      out.write("                            cartItemsContainer.innerHTML = '<li>Tin lưu trống</li>';\r\n");
      out.write("                        }\r\n");
      out.write("                    } else {\r\n");
      out.write("                        cartItemsContainer.innerHTML = `<li>${data.message}</li>`;\r\n");
      out.write("                    }\r\n");
      out.write("                })\r\n");
      out.write("                .catch(error => {\r\n");
      out.write("                    console.error('Error loading cart items:', error);\r\n");
      out.write("                    document.getElementById('cart-items').innerHTML = '<li>Đã xảy ra lỗi khi tải tin lưu.</li>';\r\n");
      out.write("                });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"menu\">\r\n");
      out.write("        <div class=\"header-bottom\" style=\"height:60px;margin-top: 0\">\r\n");
      out.write("            <div class=\"store-name\">\r\n");
      out.write("                <h1>\r\n");
      out.write("                    <a href=\"");
      out.print( isLoggedIn ? "welcome" : "homes" );
      out.write("\">\r\n");
      out.write("                        <span class=\"color1\">HOME</span>\r\n");
      out.write("                        <span class=\"color2\">LANDER</span>\r\n");
      out.write("                    </a>\r\n");
      out.write("                </h1>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <nav>\r\n");
      out.write("                <ul class=\"u-lo\">\r\n");
      out.write("                    <li><a href=\"forsale\">Nhà Đất Bán</a>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li><a href=\"#\">Thông tin bán nhà đất</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Mua bán bất động sản</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Nhà đất giá rẻ</a></li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li><a href=\"forrent\">Nhà Đất Cho Thuê</a>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li><a href=\"#\">Thông tin cho thuê nhà đất</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Thuê nhà nguyên căn</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Thuê căn hộ giá rẻ</a></li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li><a href=\"Project\">Dự Án</a>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li><a href=\"#\">Các dự án nổi bật</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Dự án nhà ở</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Dự án chung cư</a></li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li><a href=\"news.jsp\">Tin Tức</a>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li><a href=\"#\">Tin thị trường</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Xu hướng bất động sản</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Phân tích và đánh giá</a></li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li><a href=\"wiki.jsp\">Wiki BĐS</a>\r\n");
      out.write("                        <ul>\r\n");
      out.write("                            <li><a href=\"#\">Mua bán</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Cho thuê</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Tài chính</a></li>\r\n");
      out.write("                            <li><a href=\"#\">Phong thủy</a></li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"contact-info\">\r\n");
      out.write("                <img src=\"jpg/phone-call.png\" alt=\"Phone Icon\" class=\"phone-icon\">\r\n");
      out.write("                <span class=\"phone-number\">0123 456 789</span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</header>\r\n");

    String propertyId = request.getParameter("id");
    PropertyDAO propertyDAO = new PropertyDAO();
    Property1 property = propertyDAO.getPropertyById(propertyId);

    // Fetch thumbnails from the property_images table
    List<String> thumbnailUrls = propertyDAO.getThumbnailUrls(propertyId);

    if (property == null) {
        out.println("<h2>Property not found</h2>");
    } else {

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"max-width:80% \">\r\n");
      out.write("    <div class=\"property-detail\">\r\n");
      out.write("        <h2>");
      out.print( property.getTitle() );
      out.write("\r\n");
      out.write("        </h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <img id=\"mainImage\" class=\"main-image\"\r\n");
      out.write("             src=\"");
      out.print( property.getImageUrl() != null ? property.getImageUrl() : "default.jpg" );
      out.write("\"\r\n");
      out.write("             alt=\"");
      out.print( property.getTitle() );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("        <div class=\"thumbnails\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"thumbnail\"\r\n");
      out.write("                 onclick=\"changeMainImage('");
      out.print( property.getImageUrl() != null ? property.getImageUrl() : "default.jpg" );
      out.write("')\">\r\n");
      out.write("                <img src=\"");
      out.print( property.getImageUrl() != null ? property.getImageUrl() : "default.jpg" );
      out.write("\"\r\n");
      out.write("                     alt=\"Thumbnail\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            ");

                if (thumbnailUrls != null && !thumbnailUrls.isEmpty()) {
                    int displayedCount = Math.min(thumbnailUrls.size(), 20); // Giảm số lượng thumbnail còn lại xuống 4
                    for (int i = 0; i < displayedCount; i++) {
                        String thumbnailUrl = thumbnailUrls.get(i);
            
      out.write("\r\n");
      out.write("            <div class=\"thumbnail\" onclick=\"changeMainImage('");
      out.print( thumbnailUrl );
      out.write("')\">\r\n");
      out.write("                <img src=\"");
      out.print( thumbnailUrl );
      out.write("\" alt=\"Thumbnail\">\r\n");
      out.write("            </div>\r\n");
      out.write("            ");

                    }
                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

            // Lấy địa chỉ từ property
            String address2 = property.getAddress();
            String formattedAddress = address2.replace(" ", "+"); // Thay khoảng trắng bằng dấu +

            // Tạo URL nhúng Google Maps không có API key
            String mapUrl = "https://www.google.com/maps?q=" + formattedAddress + "&output=embed";
        
      out.write("\r\n");
      out.write("        <p><i class=\"fas fa-map-marker-alt\"></i> ");
      out.print( property.getAddress() );
      out.write("\r\n");
      out.write("        </p>\r\n");
      out.write("        <p style=\"color: darkred\"><i class=\"fas fa-money-bill-wave\"></i> ");
      out.print( property.getPrice() );
      out.write(" tỷ</p>\r\n");
      out.write("        <p style=\"color: darkred\"><i class=\"fas fa-ruler-combined\"></i> ");
      out.print( property.getArea() );
      out.write(" m²</p>\r\n");
      out.write("        <p><i class=\"fas fa-info-circle\"></i>");
      out.print( property.getDescription() );
      out.write("\r\n");
      out.write("        </p>\r\n");
      out.write("\r\n");
      out.write("        </p>\r\n");
      out.write("        ");

            String message = (String) session.getAttribute("message");
            if (message != null) {
        
      out.write("\r\n");
      out.write("        <div class=\"alert alert-info\" style=\"color: darkred;padding-top: 30px;font-size: 30px   \"><i class=\"fas fa-info-circle\"></i>\r\n");
      out.write("            ");
      out.print( message );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

                // Optionally remove the message after displaying it
                session.removeAttribute("message");
            }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <form action=\"addToCart\" method=\"post\" style=\"display: inline;\">\r\n");
      out.write("            <input type=\"hidden\" name=\"propertyId\" value=\"");
      out.print( property.getId() );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"title\" value=\"");
      out.print( property.getTitle() );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"price\" value=\"");
      out.print( property.getPrice() );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"area\" value=\"");
      out.print( property.getArea() );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"imageUrl\" value=\"");
      out.print( property.getImageUrl() );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"address\" value=\"");
      out.print( property.getAddress() );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("            <!-- Heart icon as submit button -->\r\n");
      out.write("            <button type=\"submit\" class=\"heart-icon\" style=\"border: none; background: transparent; padding: 0;\">\r\n");
      out.write("                <img src=\"jpg/heartred.png\" alt=\"Heart Icon\" class=\"heart-image\">\r\n");
      out.write("                <span class=\"favorite-text\">Bấm vào đây để lưu tin</span>\r\n");
      out.write("            </button>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <style>\r\n");
      out.write("        .favorite-text {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            bottom: -25px; /* Đưa văn bản xuống dưới trái tim */\r\n");
      out.write("            left: 50%;\r\n");
      out.write("            transform: translateX(-50%); /* Căn giữa văn bản với trái tim */\r\n");
      out.write("            visibility: hidden; /* Ẩn văn bản mặc định */\r\n");
      out.write("            background-color: rgba(0, 0, 0, 0.7);\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 5px 10px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("            white-space: nowrap; /* Ngừng việc gãy dòng */\r\n");
      out.write("            z-index: 1000; /* Đảm bảo văn bản nổi lên trên mọi phần tử khác */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .heart-icon:hover .favorite-text {\r\n");
      out.write("            visibility: visible; /* Hiển thị khi hover vào icon trái tim */\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 800px; /* Đặt chiều rộng tối đa cho container */\r\n");
      out.write("            margin: 0 auto; /* Center container */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .property-detail {\r\n");
      out.write("            position: relative;\r\n");
      out.write("\r\n");
      out.write("            margin-bottom: 20px; /* Khoảng cách giữa property-detail và sản phẩm liên quan */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .main-image {\r\n");
      out.write("            max-width: 100%; /* Đảm bảo hình ảnh không bị tràn ra ngoài */\r\n");
      out.write("            height: auto; /* Giữ tỉ lệ hình ảnh */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .thumbnails {\r\n");
      out.write("            display: flex; /* Sử dụng flexbox để hiển thị ngang */\r\n");
      out.write("            overflow-x: auto; /* Cho phép cuộn ngang */\r\n");
      out.write("            margin-top: 10px; /* Khoảng cách giữa hình ảnh lớn và thumbnails */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .thumbnail {\r\n");
      out.write("            flex: 0 0 auto; /* Không cho phép thumbnail co lại */\r\n");
      out.write("            width: 100px; /* Chiều rộng của mỗi thumbnail */\r\n");
      out.write("            margin-right: 10px; /* Khoảng cách giữa các thumbnail */\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .thumbnail img {\r\n");
      out.write("            width: 100%; /* Đảm bảo hình ảnh phù hợp với thumbnail */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .related-properties {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .related-properties-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            overflow-x: auto; /* Cho phép cuộn ngang cho sản phẩm liên quan */\r\n");
      out.write("            height: 300px; /* Chiều cao cố định cho sản phẩm liên quan */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .related-property {\r\n");
      out.write("            flex: 0 0 auto; /* Không cho phép co lại */\r\n");
      out.write("            width: 200px; /* Chiều rộng của mỗi sản phẩm liên quan */\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .related-property img {\r\n");
      out.write("            max-width: 100%;\r\n");
      out.write("            height: auto; /* Giữ tỉ lệ hình ảnh */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function changeMainImage(url) {\r\n");
      out.write("            document.getElementById('mainImage').src = url; // Thay đổi hình ảnh chính\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        const thumbnailsContainer = document.querySelector('.thumbnails');\r\n");
      out.write("        thumbnailsContainer.addEventListener('scroll', function () {\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");


        PosterDAO posterDAO = new PosterDAO();
        Poster poster = posterDAO.getPosterByPropertyId(Integer.parseInt(propertyId));

        if (poster == null) {
            out.println("<h2>Poster information not found</h2>");
        } else {
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"sender-info\">\r\n");
      out.write("        <h3>Thông tin người đăng</h3>\r\n");
      out.write("        <div class=\"sender-image\">\r\n");
      out.write("            <img src=\"");
      out.print( poster.getImgUrl() );
      out.write("\"\r\n");
      out.write("                 alt=\"Người đăng\" class=\"sender-avatar\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"info-box\">\r\n");
      out.write("            <span id=\"sender-name\">");
      out.print( poster.getName() );
      out.write("</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"info-box\">\r\n");
      out.write("            <span class=\"icon\" style=\"margin-bottom: 12px;\">✉️</span>\r\n");
      out.write("            <span id=\"sender-email\">");
      out.print( poster.getMail() );
      out.write("</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"info-box\">\r\n");
      out.write("            <span class=\"icon\" style=\"margin-bottom: 12px;\">📱</span>\r\n");
      out.write("            <span id=\"sender-zalo\">https://zalo.me/");
      out.print( poster.getPhone() );
      out.write("</span>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"bottom-banner\">\r\n");
      out.write("    <img src=\"jpg/bank-loan-offer-banner-web.jpg\" alt=\"Banner quảng cáo\" style=\"width: 100%; border-radius: 5px;\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"map-container\">\r\n");
      out.write("    <h3>Bản đồ vị trí bất động sản</h3>\r\n");
      out.write("    <iframe\r\n");
      out.write("            src=\"");
      out.print(mapUrl);
      out.write("\"\r\n");
      out.write("            width=\"100%\"\r\n");
      out.write("            height=\"300\"\r\n");
      out.write("            style=\"border:5px;\"\r\n");
      out.write("            allowfullscreen=\"\"\r\n");
      out.write("            loading=\"lazy\"></iframe>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"additional-info\">\r\n");
      out.write("    <h3>Thông tin bổ sung</h3>\r\n");
      out.write("    <div class=\"info-container\">\r\n");
      out.write("        <div class=\"info-item\">\r\n");
      out.write("            <i class=\"fas fa-calendar-alt info-icon\"></i>\r\n");
      out.write("            <span><strong>Ngày đăng:</strong> 22/10/2024</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"info-item\">\r\n");
      out.write("            <i class=\"fas fa-calendar-times info-icon\"></i>\r\n");
      out.write("            <span><strong>Ngày hết hạn:</strong> 01/11/2024</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"info-item\">\r\n");
      out.write("            <i class=\"fas fa-info-circle info-icon\"></i>\r\n");
      out.write("            <span><strong>Loại tin:</strong> Tin thường</span>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"info-item\">\r\n");
      out.write("            <i class=\"fas fa-hashtag info-icon\"></i>\r\n");
      out.write("            <span><strong>Mã tin:</strong> 41288902</span>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");

    // Giả sử bạn đã có thông tin chi tiết của bất động sản
    // Lấy địa chỉ để tìm các sản phẩm cùng thành phố
    String address = property.getAddress();
    String[] addressParts = address.split(","); // Tách địa chỉ theo dấu phẩy
    String city = addressParts[addressParts.length - 1].trim(); // Lấy tên thành phố (phần cuối cùng)


    // Lấy các sản phẩm cùng thành phố
    PropertyDAO propertyDAO1 = new PropertyDAO();
    List<Property1> relatedProperties = propertyDAO1.getPropertiesByCity(city); // Phương thức để lấy các sản phẩm cùng thành phố

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"related-properties\" style=\"width:63%\">\r\n");
      out.write("    <h3>Các sản phẩm liên quan</h3>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"related-properties-container\" id=\"relatedProductsContainer\">\r\n");
      out.write("        ");

            if (relatedProperties != null && !relatedProperties.isEmpty()) {
                for (Property1 relatedProperty : relatedProperties) {

        
      out.write("\r\n");
      out.write("        <div class=\"related-property\">\r\n");
      out.write("            <a href=\"property-detail.jsp?id=");
      out.print( relatedProperty.getId() );
      out.write("\"\r\n");
      out.write("               style=\"text-decoration: none; color: inherit;\">\r\n");
      out.write("\r\n");
      out.write("                <img src=\"");
      out.print( relatedProperty.getImageUrl() );
      out.write("\" alt=\"Sản phẩm ");
      out.print( relatedProperty.getTitle() );
      out.write("\">\r\n");
      out.write("                <h4>");
      out.print( relatedProperty.getTitle() );
      out.write("\r\n");
      out.write("                </h4>\r\n");
      out.write("                <p style=\"display: flex; justify-content: space-between; color: red;\">\r\n");
      out.write("                    <span>Giá: ");
      out.print( relatedProperty.getPrice() );
      out.write(" tỷ</span>\r\n");
      out.write("                    <span>Diện tích: ");
      out.print( relatedProperty.getArea() );
      out.write(" m²</span>\r\n");
      out.write("                </p>\r\n");
      out.write("                <p style=\"display: flex; align-items: center;\">\r\n");
      out.write("                    <img src=\"jpg/location.png\" alt=\"Location Icon\" class=\"location-icon\"\r\n");
      out.write("                         style=\"width: 16px; height: 16px; margin-right: 5px;\">\r\n");
      out.write("                    Địa chỉ: ");
      out.print( relatedProperty.getAddress() );
      out.write("\r\n");
      out.write("                </p>\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

            }
        } else {
        
      out.write("\r\n");
      out.write("        <p>Không có sản phẩm nào liên quan từ cùng thành phố.</p>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"more-products\">\r\n");
      out.write("            <button id=\"scrollLeftBtn\"> <</button>\r\n");
      out.write("            <button id=\"scrollRightBtn\">️ ></button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    const container = document.getElementById('relatedProductsContainer');\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('scrollLeftBtn').addEventListener('click', function () {\r\n");
      out.write("        container.scrollBy({\r\n");
      out.write("            top: 0,\r\n");
      out.write("            left: -200, // Cuộn 200px sang trái\r\n");
      out.write("            behavior: 'smooth'\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('scrollRightBtn').addEventListener('click', function () {\r\n");
      out.write("        container.scrollBy({\r\n");
      out.write("            top: 0,\r\n");
      out.write("            left: 200, // Cuộn 200px sang phải\r\n");
      out.write("            behavior: 'smooth'\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");


    String address1 = property.getAddress();
    String[] addressParts1 = address1.split(",");
    String city1 = addressParts1[addressParts1.length - 1].trim(); // Lấy tên thành phố (phần cuối cùng)

    // Khởi tạo DAO
    PropertyDAO propertyDAO2 = new PropertyDAO();
    List<Property1> highestPriceProperties = propertyDAO2.getHighestPriceProperties(city1, 3); // Lấy 3 sản phẩm có giá cao nhất
    List<Property1> largestAreaProperties = propertyDAO2.getLargestAreaProperties(city1, 3); // Lấy 3 sản phẩm có diện tích lớn nhất

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"related-properties\" style=\"width:63%\">\r\n");
      out.write("    <h3>Các sản phẩm bạn có thể sẽ quan tâm</h3>\r\n");
      out.write("    <div class=\"related-properties-container\" id=\"relatedProductsContainer1\">\r\n");
      out.write("\r\n");
      out.write("        ");

            for (Property1 property1 : highestPriceProperties) {
        
      out.write("\r\n");
      out.write("        <div class=\"related-property\">\r\n");
      out.write("            <a href=\"property-detail.jsp?id=");
      out.print( property1.getId() );
      out.write("\" style=\"text-decoration: none; color: inherit;\">\r\n");
      out.write("\r\n");
      out.write("                <img src=\"");
      out.print( property1.getImageUrl() );
      out.write("\" alt=\"Sản phẩm ");
      out.print( property1.getTitle() );
      out.write("\">\r\n");
      out.write("                <h4>");
      out.print( property1.getTitle() );
      out.write("\r\n");
      out.write("                </h4>\r\n");
      out.write("                <p style=\"display: flex; justify-content: space-between; color: red;\">\r\n");
      out.write("                    <span>Giá: ");
      out.print( property1.getPrice() );
      out.write(" tỷ</span>\r\n");
      out.write("                    <span>Diện tích: ");
      out.print( property1.getArea() );
      out.write(" m²</span>\r\n");
      out.write("                </p>\r\n");
      out.write("                <p style=\"display: flex; align-items: center;\">\r\n");
      out.write("                    <img src=\"jpg/location.png\" alt=\"Location Icon\" class=\"location-icon\"\r\n");
      out.write("                         style=\"width: 16px; height: 16px; margin-right: 5px;\">\r\n");
      out.write("                    Địa chỉ: ");
      out.print( property1.getAddress() );
      out.write("\r\n");
      out.write("                </p>\r\n");
      out.write("            </a>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");

            for (Property1 property2 : largestAreaProperties) {
        
      out.write("\r\n");
      out.write("        <div class=\"related-property\">\r\n");
      out.write("            <a href=\"property-detail.jsp?id=");
      out.print( property2.getId() );
      out.write("\" style=\"text-decoration: none; color: inherit;\">\r\n");
      out.write("\r\n");
      out.write("                <img src=\"");
      out.print( property2.getImageUrl() );
      out.write("\" alt=\"Sản phẩm ");
      out.print( property2.getTitle() );
      out.write("\">\r\n");
      out.write("                <h4>");
      out.print( property2.getTitle() );
      out.write("\r\n");
      out.write("                </h4>\r\n");
      out.write("                <p style=\"display: flex; justify-content: space-between; color: red;\">\r\n");
      out.write("                    <span>Giá: ");
      out.print( property2.getPrice() );
      out.write(" tỷ</span>\r\n");
      out.write("                    <span>Diện tích: ");
      out.print( property2.getArea() );
      out.write(" m²</span>\r\n");
      out.write("                </p>\r\n");
      out.write("                <p style=\"display: flex; align-items: center;\">\r\n");
      out.write("                    <img src=\"jpg/location.png\" alt=\"Location Icon\" class=\"location-icon\"\r\n");
      out.write("                         style=\"width: 16px; height: 16px; margin-right: 5px;\">\r\n");
      out.write("                    Địa chỉ: ");
      out.print( property2.getAddress() );
      out.write("\r\n");
      out.write("                </p>\r\n");
      out.write("            </a>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"more-products\">\r\n");
      out.write("            <button id=\"scrollLeftBtn1\"> <</button>\r\n");
      out.write("            <button id=\"scrollRightBtn1\">️ ></button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    const container1 = document.getElementById('relatedProductsContainer1');\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('scrollLeftBtn1').addEventListener('click', function () {\r\n");
      out.write("        container1.scrollBy({\r\n");
      out.write("            top: 0,\r\n");
      out.write("            left: -200, // Cuộn 200px sang trái\r\n");
      out.write("            behavior: 'smooth'\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    document.getElementById('scrollRightBtn1').addEventListener('click', function () {\r\n");
      out.write("        container1.scrollBy({\r\n");
      out.write("            top: 0,\r\n");
      out.write("            left: 200, // Cuộn 200px sang phải\r\n");
      out.write("            behavior: 'smooth'\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Form for Adding Comments (only shown if logged in) -->\r\n");
 if (isLoggedIn) { 
      out.write("\r\n");
      out.write("<div class=\"comment-section\">\r\n");
      out.write("    <h3>Để lại bình luận của bạn:</h3>\r\n");
      out.write("    <form action=\"SubmitCommentServlet\" method=\"POST\">\r\n");
      out.write("        <input type=\"hidden\" name=\"productId\" value=\"");
      out.print( request.getParameter("id") );
      out.write("\">\r\n");
      out.write("        <textarea name=\"comment\" rows=\"5\" placeholder=\"Nhập bình luận của bạn...\" required></textarea>\r\n");
      out.write("        <button type=\"submit\">Gửi bình luận</button>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
 } else { 
      out.write("\r\n");
      out.write("<div class=\"login-prompt\">\r\n");
      out.write("    <p style=\" margin-left: 135px;margin-top: 30px\">Vui lòng <a href=\"login.jsp\">đăng nhập</a> để có thể để lại bình\r\n");
      out.write("        luận.</p>\r\n");
      out.write("</div>\r\n");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String propertyIdParam = request.getParameter("id");
    String loggedInUsername = (String) session.getAttribute("username"); // Get logged-in username from session
    String role = (String) session.getAttribute("role"); // Get role from session
    List<Comment> comments = new ArrayList<>();

    if (propertyIdParam != null) {
        try {
            CommentDAO commentDAO = new CommentDAO();
            comments = commentDAO.getCommentsByPropertyId(propertyId);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"existing-comments\">\r\n");
      out.write("    <h3>Bình luận:</h3>\r\n");
      out.write("\r\n");
      out.write("    ");

        if (comments != null && !comments.isEmpty()) {
            for (Comment comment : comments) {
                // Check if the logged-in user is the comment author (by username) or an admin
                boolean canDelete = "admin".equals(role) ||
                        (loggedInUsername != null && loggedInUsername.equals(comment.getUserName()));
    
      out.write("\r\n");
      out.write("    <div class=\"comment\">\r\n");
      out.write("        <p>\r\n");
      out.write("            <strong>");
      out.print( comment.getUserName() != null ? comment.getUserName() : "Unknown User" );
      out.write("\r\n");
      out.write("            </strong>\r\n");
      out.write("            - ");
      out.print( comment.getCommentDate() );
      out.write("\r\n");
      out.write("                ");
 if (canDelete) { 
      out.write("\r\n");
      out.write("            <!-- Show delete button if the user is admin or the comment's author -->\r\n");
      out.write("        <form action=\"DeleteCommentServlet\" method=\"post\" style=\"display:inline;\">\r\n");
      out.write("            <input type=\"hidden\" name=\"commentId\" value=\"");
      out.print( comment.getCommentId() );
      out.write("\">\r\n");
      out.write("            <input type=\"hidden\" name=\"propertyId\" value=\"");
      out.print( propertyIdParam );
      out.write("\">\r\n");
      out.write("            <button type=\"submit\" onclick=\"return confirm('Are you sure you want to delete this comment?');\">Delete\r\n");
      out.write("            </button>\r\n");
      out.write("        </form>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        </p>\r\n");
      out.write("        <p>");
      out.print( comment.getContent() );
      out.write("\r\n");
      out.write("        </p>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");

        }
    } else {
    
      out.write("\r\n");
      out.write("    <p>Chưa có bình luận nào.</p>\r\n");
      out.write("    ");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    /* Styling for the comments section */\r\n");
      out.write("    .existing-comments {\r\n");
      out.write("        margin-left: 135px;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        max-width: 600px;\r\n");
      out.write("        margin-top: 30px;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        background-color: #f9f9f9;\r\n");
      out.write("        border: 1px solid #ddd;\r\n");
      out.write("        border-radius: 8px;\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .existing-comments h3 {\r\n");
      out.write("        font-size: 24px;\r\n");
      out.write("        color: #333;\r\n");
      out.write("        border-bottom: 2px solid #ddd;\r\n");
      out.write("        padding-bottom: 10px;\r\n");
      out.write("        margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .comment {\r\n");
      out.write("\r\n");
      out.write("        padding: 15px;\r\n");
      out.write("        margin-bottom: 15px;\r\n");
      out.write("        border-bottom: 1px solid #ddd;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .comment:last-child {\r\n");
      out.write("        border-bottom: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .comment p {\r\n");
      out.write("        margin: 5px 0;\r\n");
      out.write("        color: #333;\r\n");
      out.write("        line-height: 1.4;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .comment strong {\r\n");
      out.write("        color: #0077cc;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .comment .date {\r\n");
      out.write("        color: #999;\r\n");
      out.write("        font-size: 12px;\r\n");
      out.write("        margin-left: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .no-comments {\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        color: #666;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        padding: 20px 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .comment-section {\r\n");
      out.write("        margin-top: 20px;\r\n");
      out.write("        margin-left: 135px;\r\n");
      out.write("        max-width: 53%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    textarea {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        border: 1px solid #ccc;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button {\r\n");
      out.write("        padding: 10px 20px;\r\n");
      out.write("        background-color: #4CAF50;\r\n");
      out.write("        color: white;\r\n");
      out.write("        border: none;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button:hover {\r\n");
      out.write("        background-color: #45a049;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-prompt p {\r\n");
      out.write("        color: #f00;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"copyright\">\r\n");
      out.write("    <p>© Mọi quyền thuộc về Homelander. Mọi thông tin liên quan vui lòng liên hệ với chúng tôi.</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    .related-properties {\r\n");
      out.write("        margin-top: 10px; /* Giảm khoảng cách giữa các phần */\r\n");
      out.write("        padding-left: 135px; /* Khoảng cách với lề trái */\r\n");
      out.write("        position: relative; /* Để định vị các nút */\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    .related-properties-container {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        overflow-x: auto; /* Ẩn thanh cuộn mặc định */\r\n");
      out.write("        height: 250px; /* Chiều cao cố định cho sản phẩm liên quan */\r\n");
      out.write("        padding-bottom: 10px; /* Khoảng cách cho nút cuộn */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .related-properties-container::-webkit-scrollbar {\r\n");
      out.write("        height: 0px; /* Chiều cao của thanh cuộn */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .related-property {\r\n");
      out.write("        flex: 0 0 auto; /* Không cho phép co lại */\r\n");
      out.write("        width: 200px; /* Chiều rộng của mỗi sản phẩm liên quan */\r\n");
      out.write("        margin-right: 10px;\r\n");
      out.write("        text-align: left;\r\n");
      out.write("        overflow: visible; /* Cho phép hình ảnh hiển thị bên ngoài */\r\n");
      out.write("        border: 1px solid gainsboro;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        position: relative; /* Để z-index có hiệu lực */\r\n");
      out.write("        transition: transform 0.3s; /* Thêm hiệu ứng chuyển tiếp */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .related-property:hover {\r\n");
      out.write("        transform: translateY(-5px); /* Nổi lên trên 5px */\r\n");
      out.write("        z-index: 15; /* Đưa sản phẩm lên trên cùng để không bị che khuất */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    .related-property img {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        width: 100%; /* Đảm bảo hình ảnh phù hợp với kích thước chứa */\r\n");
      out.write("        height: auto; /* Tự động điều chỉnh chiều cao */\r\n");
      out.write("        border: 2px solid transparent; /* Border mặc định là trong suốt */\r\n");
      out.write("        border-radius: 20px; /* Bo tròn góc cho hình ảnh */\r\n");
      out.write("        transition: border-color 0.3s; /* Hiệu ứng chuyển tiếp cho border */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .more-products {\r\n");
      out.write("        position: absolute; /* Định vị tuyệt đối */\r\n");
      out.write("        top: 0; /* Căn lên cùng với tiêu đề */\r\n");
      out.write("        right: 0; /* Căn bên phải */\r\n");
      out.write("        padding-bottom: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #scrollLeftBtn, #scrollRightBtn {\r\n");
      out.write("        background-color: whitesmoke; /* Màu nền cho nút */\r\n");
      out.write("        color: black; /* Màu chữ */\r\n");
      out.write("        border: none; /* Không có đường viền */\r\n");
      out.write("        padding: 5px; /* Khoảng cách bên trong */\r\n");
      out.write("        cursor: pointer; /* Con trỏ khi di chuột qua */\r\n");
      out.write("        border-radius: 5px; /* Bo tròn góc */\r\n");
      out.write("        font-size: 14px; /* Kích thước chữ */\r\n");
      out.write("        margin-left: 5px; /* Khoảng cách giữa các nút */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    #scrollLeftBtn:hover, #scrollRightBtn:hover {\r\n");
      out.write("        background-color: wheat; /* Màu nền khi di chuột qua */\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"footer\">\r\n");
      out.write("    <div class=\"footer-top\">\r\n");
      out.write("\r\n");
      out.write("        <h1><a href=\"homes\">\r\n");
      out.write("            <span class=\"color1\">HOME</span>\r\n");
      out.write("            <span class=\"color2\">LANDER</span>\r\n");
      out.write("        </a></h1>\r\n");
      out.write("        <span class=\"footer-item\"><i class=\"fas fa-phone\"></i> Hotline: 0123 456 789</span>\r\n");
      out.write("        <span class=\"footer-item\"><i class=\"fas fa-envelope\"></i> Hỗ trợ: support@batdongsan.com</span>\r\n");
      out.write("        <span class=\"footer-item\"><i class=\"fas fa-headset\"></i> Chăm sóc: 0987 654 321</span>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"footer-content\">\r\n");
      out.write("        <!-- Thông tin công ty -->\r\n");
      out.write("        <div class=\"company-info\">\r\n");
      out.write("            <h3>Công ty Bất Động Sản</h3>\r\n");
      out.write("            <p>Địa chỉ: 123 Đường ABC, Quận 1, TP.HCM</p>\r\n");
      out.write("            <p>Điện thoại: 0123 456 789</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Liên kết nhanh -->\r\n");
      out.write("        <div class=\"quick-links\">\r\n");
      out.write("            <h3>Liên kết nhanh</h3>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"#\">Trang chủ</a></li>\r\n");
      out.write("                <li><a href=\"#\">Dự án</a></li>\r\n");
      out.write("                <li><a href=\"#\">Tin tức</a></li>\r\n");
      out.write("                <li><a href=\"#\">Liên hệ</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Mạng xã hội -->\r\n");
      out.write("        <div class=\"social-media\">\r\n");
      out.write("            <h3>Mạng xã hội</h3>\r\n");
      out.write("            <a href=\"https://www.facebook.com/khoa.ngo.562114/\" class=\"social-icon\"><i class=\"fab fa-facebook\"></i>\r\n");
      out.write("                Facebook</a>\r\n");
      out.write("            <a href=\"https://www.instagram.com/khoa5462/\" class=\"social-icon\"><i class=\"fab fa-instagram\"></i>\r\n");
      out.write("                Instagram</a>\r\n");
      out.write("            <a href=\"https://mail.google.com/mail/u/0/?hl=vi#inbox\" class=\"social-icon\"><i\r\n");
      out.write("                    class=\"fas fa-envelope\"></i>\r\n");
      out.write("                Mail</a>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Form nhập email -->\r\n");
      out.write("        <div class=\"newsletter\">\r\n");
      out.write("            <h3>Đăng ký nhận tin tức mới nhất</h3>\r\n");
      out.write("            <form action=\"#\" method=\"POST\">\r\n");
      out.write("                <input type=\"email\" name=\"email\" placeholder=\"Nhập email của bạn\" required>\r\n");
      out.write("                <button type=\"submit\">Đăng ký</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"footer-bottom\">\r\n");
      out.write("        <p>&copy; 2024 Công ty Bất Động Sản. Mọi quyền lợi thuộc về công ty.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");

    }

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
